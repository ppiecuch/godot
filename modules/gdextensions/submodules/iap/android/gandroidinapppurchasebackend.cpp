U2FsdGVkX19L/Px8SxtryiNpbmNsdWRlICJnYW5kcm9pZGluYXBwcHVyY2hhc2Vi
YWNrZW5kLmgiCiNpbmNsdWRlICJnYW5kcm9pZGluYXBwcHJvZHVjdC5oIgojaW5j
bHVkZSAiZ2FuZHJvaWRpbmFwcHRyYW5zYWN0aW9uLmgiCiNpbmNsdWRlICJnaW5h
cHBzdG9yZS5oIgoKI2luY2x1ZGUgImNvcmUvb3MvZGlyX2FjY2Vzcy5oIgojaW5j
bHVkZSAiY29yZS9vcy9maWxlX2FjY2Vzcy5oIgojaW5jbHVkZSAicGxhdGZvcm0v
YW5kcm9pZC9qYXZhX2dvZG90X3dyYXBwZXIuaCIKI2luY2x1ZGUgInBsYXRmb3Jt
L2FuZHJvaWQvb3NfYW5kcm9pZC5oIgoKI2luY2x1ZGUgPGpuaS5oPgoKI2RlZmlu
ZSBWRVJCT1NFKC4uLikgcHJpbnRfdmVyYm9zZSh2Zm9ybWF0KF9fVkFfQVJHU19f
KSkKCnN0YXRpYyBfRk9SQ0VfSU5MSU5FXyBqb2JqZWN0IF9nZXRfZ29kb3RfYWN0
aXZpdHkoKSB7CglpZiAoT1NfQW5kcm9pZCAqb3MgPSAoT1NfQW5kcm9pZCAqKU9T
OjpnZXRfc2luZ2xldG9uKCkpIHsKCQlyZXR1cm4gb3MtPmdldF9nb2RvdF9qYXZh
KCktPmdldF9hY3Rpdml0eSgpOwoJfQoJV0FSTl9QUklOVCgiR29kb3RKYXZhV3Jh
cHBlciBub3QgZm91bmQiKTsKCXJldHVybiBudWxscHRyOwp9CgpzdGF0aWMgdm9p
ZCBzdGFydEludGVudFNlbmRlcihjb25zdCBKYXZhSm5pT2JqZWN0ICZpbnRlbnRT
ZW5kZXIsIGludCByZWNlaXZlclJlcXVlc3RDb2RlLCBBY3Rpdml0eVJlc3VsdFJl
Y2VpdmVyICpyZXN1bHRSZWNlaXZlcikgewoJSmF2YUpuaU9iamVjdCBhY3Rpdml0
eSA9IF9nZXRfZ29kb3RfYWN0aXZpdHkoKTsKCWlmIChyZXN1bHRSZWNlaXZlciAh
PSAwKSB7CgkJYWN0aXZpdHkuY2FsbE1ldGhvZDx2b2lkPigKCQkJCSJzdGFydElu
dGVudFNlbmRlckZvclJlc3VsdCIsCgkJCQkiKExhbmRyb2lkL2NvbnRlbnQvSW50
ZW50U2VuZGVyO0lMYW5kcm9pZC9jb250ZW50L0ludGVudDtJSUkpViIsCgkJCQlp
bnRlbnRTZW5kZXIub2JqZWN0PGpvYmplY3Q+KCksCgkJCQlBY3Rpdml0eVJlc3Vs
dFJlY2VpdmVyOjpnZXRHbG9iYWxSZXF1ZXN0Q29kZShyZXN1bHRSZWNlaXZlciwg
cmVjZWl2ZXJSZXF1ZXN0Q29kZSksCgkJCQkwLCAvLyBmaWxsSW5JbnRlbnQKCQkJ
CTAsIC8vIGZsYWdzTWFzawoJCQkJMCwgLy8gZmxhZ3NWYWx1ZXMKCQkJCTApOyAv
LyBleHRyYUZsYWdzCgl9IGVsc2UgewoJCWFjdGl2aXR5LmNhbGxNZXRob2Q8dm9p
ZD4oCgkJCQkic3RhcnRJbnRlbnRTZW5kZXIiLAoJCQkJIihMYW5kcm9pZC9jb250
ZW50L0ludGVudFNlbmRlcjtMYW5kcm9pZC9jb250ZW50L0ludGVudDtJSUkpViIs
CgkJCQlpbnRlbnRTZW5kZXIub2JqZWN0PGpvYmplY3Q+KCksCgkJCQkwLCAvLyBm
aWxsSW5JbnRlbnQKCQkJCTAsIC8vIGZsYWdzTWFzawoJCQkJMCwgLy8gZmxhZ3NW
YWx1ZXMKCQkJCTApOyAvLyBleHRyYUZsYWdzCgl9Cn0KCkdBbmRyb2lkSW5BcHBQ
dXJjaGFzZUJhY2tlbmQ6OkdBbmRyb2lkSW5BcHBQdXJjaGFzZUJhY2tlbmQoKSA6
CgkJbV9pc1JlYWR5KGZhbHNlKSB7CglWRVJCT1NFKCJDcmVhdGluZyBiYWNrZW5k
Iik7CgoJbV9qYXZhT2JqZWN0ID0gSmF2YUpuaU9iamVjdCgKCQkJImNvbS9rb21z
b2Z0L2luYXBwL3B1cmNoYXNpbmcvSW5BcHBQdXJjaGFzZSIsCgkJCSIoTGFuZHJv
aWQvY29udGVudC9Db250ZXh0O0opViIsCgkJCV9nZXRfZ29kb3RfYWN0aXZpdHko
KSwKCQkJcmVpbnRlcnByZXRfY2FzdDxqbG9uZz4odGhpcykpOwoJaWYgKCFtX2ph
dmFPYmplY3QuaXNWYWxpZCgpKSB7CgkJV0FSTl9QUklOVCgiQ2Fubm90IGluaXRp
YWxpemUgSUFQIGJhY2tlbmQgZm9yIEFuZHJvaWQgZHVlIHRvIG1pc3NpbmcgZGVw
ZW5kZW5jeTogSW5BcHBQdXJjaGFzZSBjbGFzcyIpOwoJCXJldHVybjsKCX0KfQoK
U3RyaW5nIEdBbmRyb2lkSW5BcHBQdXJjaGFzZUJhY2tlbmQ6OmZpbmFsaXplZFVu
bG9ja2FibGVGaWxlTmFtZSgpIGNvbnN0IHsKCXJldHVybiBTdHJpbmcoInVzZXI6
Oi8vLmdkLXB1cmNoYXNpbmctZGF0YS9pYXBfZmluYWxpemF0aW9uLmRhdGEiKTsK
fQoKdm9pZCBHQW5kcm9pZEluQXBwUHVyY2hhc2VCYWNrZW5kOjppbml0aWFsaXpl
KCkgewoJVkVSQk9TRSgiSW5pdGlhbGl6aW5nIGJhY2tlbmQiKTsKCgltX2phdmFP
YmplY3QuY2FsbE1ldGhvZDx2b2lkPigiaW5pdGlhbGl6ZUNvbm5lY3Rpb24iKTsK
CglGaWxlQWNjZXNzUmVmIGZpbGUgPSBGaWxlQWNjZXNzOjpvcGVuKGZpbmFsaXpl
ZFVubG9ja2FibGVGaWxlTmFtZSgpLCBGaWxlQWNjZXNzOjpSRUFEKTsKCWlmIChm
aWxlKSB7CgkJd2hpbGUgKCFmaWxlLT5lb2ZfcmVhY2hlZCgpKSB7CgkJCWNvbnN0
IFN0cmluZyAmaWRlbnRpZmllciA9IGZpbGUtPmdldF9saW5lKCk7CgkJCW1fZmlu
YWxpemVkVW5sb2NrYWJsZVByb2R1Y3RzLmluc2VydChpZGVudGlmaWVyKTsKCgkJ
CVZFUkJPU0UoIkZpbmFsaXplZCB1bmxvY2thYmxlOiAlcyIsIGlkZW50aWZpZXIp
OwoJCX0KCX0gZWxzZSBpZiAoRmlsZUFjY2Vzczo6ZXhpc3RzKGZpbmFsaXplZFVu
bG9ja2FibGVGaWxlTmFtZSgpKSkgewoJCVdBUk5fUFJJTlQoIkZhaWxlZCB0byBy
ZWFkIGZyb20gZmluYWxpemF0aW9uIGRhdGEuIik7Cgl9Cn0KCmJvb2wgR0FuZHJv
aWRJbkFwcFB1cmNoYXNlQmFja2VuZDo6aXNSZWFkeSgpIGNvbnN0IHsKCU11dGV4
TG9jayBsb2NrZXIobV9tdXRleCk7CglyZXR1cm4gbV9pc1JlYWR5Owp9Cgp2b2lk
IEdBbmRyb2lkSW5BcHBQdXJjaGFzZUJhY2tlbmQ6OnJlc3RvcmVQdXJjaGFzZXMo
KSB7Cgljb25zdCBTZXQ8U3RyaW5nPiBwcmV2aW91c2x5RmluYWxpemVkVW5sb2Nr
YWJsZXMgPSBzdGQ6Om1vdmUobV9maW5hbGl6ZWRVbmxvY2thYmxlUHJvZHVjdHMp
OwoJbV9maW5hbGl6ZWRVbmxvY2thYmxlUHJvZHVjdHMuY2xlYXIoKTsKCWZvciAo
YXV0byAqRSA9IHByZXZpb3VzbHlGaW5hbGl6ZWRVbmxvY2thYmxlcy5mcm9udCgp
OyBFOyBFID0gRS0+bmV4dCgpKSB7CgkJUmVmPEdJbkFwcFByb2R1Y3Q+IHByb2R1
Y3QgPSBzdG9yZSgpLT5yZWdpc3RlcmVkUHJvZHVjdChFLT5nZXQoKSk7CgkJRVJS
X0NPTlRJTlVFX01TRyhwcm9kdWN0LmlzX251bGwoKSwgIlByb2R1Y3Qgbm90IGZv
dW5kIik7CgkJY2hlY2tGaW5hbGl6YXRpb25TdGF0dXMocHJvZHVjdCwgR0luQXBw
VHJhbnNhY3Rpb246OlB1cmNoYXNlUmVzdG9yZWQpOwoJfQp9Cgp2b2lkIEdBbmRy
b2lkSW5BcHBQdXJjaGFzZUJhY2tlbmQ6OnF1ZXJ5UHJvZHVjdHMoY29uc3QgVmVj
dG9yPFByb2R1Y3Q+ICZwcm9kdWN0cykgewoJTXV0ZXhMb2NrIGxvY2tlcihtX211
dGV4KTsKCUphdmFKbmlFbnZpcm9ubWVudCBlbnZpcm9ubWVudDsKCglQb29sU3Ry
aW5nQXJyYXkgbmV3UHJvZHVjdHM7Cglmb3IgKGludCBpID0gMDsgaSA8IHByb2R1
Y3RzLnNpemUoKTsgKytpKSB7CgkJY29uc3QgUHJvZHVjdCAmcHJvZHVjdCA9IHBy
b2R1Y3RzLmdldChpKTsKCQlpZiAobV9wcm9kdWN0VHlwZUZvclBlbmRpbmdJZC5o
YXMocHJvZHVjdC5pZGVudGlmaWVyKSkgewoJCQlXQVJOX1BSSU5UKHZmb3JtYXQo
IlByb2R1Y3QgcXVlcnkgYWxyZWFkeSBwZW5kaW5nIGZvciAlcyIsIHByb2R1Y3Qu
aWRlbnRpZmllcikpOwoJCQljb250aW51ZTsKCQl9CgkJbV9wcm9kdWN0VHlwZUZv
clBlbmRpbmdJZC5pbnNlcnQocHJvZHVjdC5pZGVudGlmaWVyLCBwcm9kdWN0LnBy
b2R1Y3RUeXBlKTsKCQluZXdQcm9kdWN0cy5hcHBlbmQocHJvZHVjdC5pZGVudGlm
aWVyKTsKCX0KCWlmIChuZXdQcm9kdWN0cy5lbXB0eSgpKSB7CgkJcmV0dXJuOwoJ
fQoJamNsYXNzIGNscyA9IGVudmlyb25tZW50LT5GaW5kQ2xhc3MoImphdmEvbGFu
Zy9TdHJpbmciKTsKCWpvYmplY3RBcnJheSBwcm9kdWN0SWRzID0gZW52aXJvbm1l
bnQtPk5ld09iamVjdEFycmF5KG5ld1Byb2R1Y3RzLnNpemUoKSwgY2xzLCAwKTsK
CWVudmlyb25tZW50LT5EZWxldGVMb2NhbFJlZihjbHMpOwoKCWZvciAoaW50IGkg
PSAwOyBpIDwgbmV3UHJvZHVjdHMuc2l6ZSgpOyArK2kpIHsKCQllbnZpcm9ubWVu
dC0+U2V0T2JqZWN0QXJyYXlFbGVtZW50KHByb2R1Y3RJZHMsIGksIEphdmFKbmlP
YmplY3Q6OmZyb21TdHJpbmcobmV3UHJvZHVjdHMuZ2V0KGkpKS5vYmplY3Q8anN0
cmluZz4oKSk7Cgl9CgoJbV9qYXZhT2JqZWN0LmNhbGxNZXRob2Q8dm9pZD4oInF1
ZXJ5RGV0YWlscyIsICIoW0xqYXZhL2xhbmcvU3RyaW5nOylWIiwgcHJvZHVjdElk
cyk7CgllbnZpcm9ubWVudC0+RGVsZXRlTG9jYWxSZWYocHJvZHVjdElkcyk7Cn0K
CnZvaWQgR0FuZHJvaWRJbkFwcFB1cmNoYXNlQmFja2VuZDo6cXVlcnlQcm9kdWN0
KEdJbkFwcFByb2R1Y3Q6OlByb2R1Y3RUeXBlIHByb2R1Y3RUeXBlLCBjb25zdCBT
dHJpbmcgJmlkZW50aWZpZXIpIHsKCVZFUkJPU0UoIlF1ZXJ5aW5nIHByb2R1Y3Q6
ICVzICglZCkiLCBpZGVudGlmaWVyLCBwcm9kdWN0VHlwZSk7CgoJcXVlcnlQcm9k
dWN0cyh2ZWN0b3I8UHJvZHVjdD4oeyBwcm9kdWN0VHlwZSwgaWRlbnRpZmllciB9
KSk7Cn0KCnZvaWQgR0FuZHJvaWRJbkFwcFB1cmNoYXNlQmFja2VuZDo6c2V0UGxh
dGZvcm1Qcm9wZXJ0eShjb25zdCBTdHJpbmcgJnByb3BlcnR5TmFtZSwgY29uc3Qg
U3RyaW5nICZ2YWx1ZSkgewoJTXV0ZXhMb2NrIGxvY2tlcihtX211dGV4KTsKCWlm
IChwcm9wZXJ0eU5hbWUubm9jYXNlY21wX3RvKCJBbmRyb2lkUHVibGljS2V5Iikg
PT0gMCkgewoJCW1famF2YU9iamVjdC5jYWxsTWV0aG9kPHZvaWQ+KCJzZXRQdWJs
aWNLZXkiLCAiKExqYXZhL2xhbmcvU3RyaW5nOylWIiwgSmF2YUpuaU9iamVjdDo6
ZnJvbVN0cmluZyh2YWx1ZSkub2JqZWN0PGpzdHJpbmc+KCkpOwoJfQp9Cgp2b2lk
IEdBbmRyb2lkSW5BcHBQdXJjaGFzZUJhY2tlbmQ6OnJlZ2lzdGVyUXVlcnlGYWls
dXJlKGNvbnN0IFN0cmluZyAmcHJvZHVjdElkKSB7CglWRVJCT1NFKCJRdWVyeSBm
YWlsZWQgZm9yICVzIiwgcHJvZHVjdElkKTsKCglNdXRleExvY2sgbG9ja2VyKG1f
bXV0ZXgpOwoJYXV0byAqaXQgPSBtX3Byb2R1Y3RUeXBlRm9yUGVuZGluZ0lkLmZp
bmQocHJvZHVjdElkKTsKCUVSUl9GQUlMX05VTEwoaXQpOwoKCUdJbkFwcFByb2R1
Y3Q6OlByb2R1Y3RUeXBlIHByb2R1Y3RUeXBlID0gaXQtPnZhbHVlKCk7CgltX3By
b2R1Y3RUeXBlRm9yUGVuZGluZ0lkLmVyYXNlKGl0KTsKCWVtaXRfc2lnbmFsKCJw
cm9kdWN0UXVlcnlGYWlsZWQocHJvZHVjdFR5cGUiLCBhcnJheShwcm9kdWN0SWQp
KTsKfQoKdm9pZCBHQW5kcm9pZEluQXBwUHVyY2hhc2VCYWNrZW5kOjpjb25zdW1l
VHJhbnNhY3Rpb24oY29uc3QgU3RyaW5nICZwdXJjaGFzZVRva2VuKSB7CglWRVJC
T1NFKCJUcmFuc2FjdGlvbiBjb25zdW1lZCBmb3IgJXMiLCBwdXJjaGFzZVRva2Vu
KTsKCglNdXRleExvY2sgbG9ja2VyKG1fbXV0ZXgpOwoJbV9qYXZhT2JqZWN0LmNh
bGxNZXRob2Q8dm9pZD4oImNvbnN1bWVQdXJjaGFzZSIsICIoTGphdmEvbGFuZy9T
dHJpbmc7KVYiLCBKYXZhSm5pT2JqZWN0Ojpmcm9tU3RyaW5nKHB1cmNoYXNlVG9r
ZW4pLm9iamVjdDxqc3RyaW5nPigpKTsKfQoKdm9pZCBHQW5kcm9pZEluQXBwUHVy
Y2hhc2VCYWNrZW5kOjpyZWdpc3RlckZpbmFsaXplZFVubG9ja2FibGUoY29uc3Qg
U3RyaW5nICZpZGVudGlmaWVyKSB7CglWRVJCT1NFKCJGaW5hbGl6aW5nIHVubG9j
a2FibGUgJXMiLCBpZGVudGlmaWVyKTsKCglNdXRleExvY2sgbG9ja2VyKG1fbXV0
ZXgpOwoJbV9maW5hbGl6ZWRVbmxvY2thYmxlUHJvZHVjdHMuaW5zZXJ0KGlkZW50
aWZpZXIpOwoKCVN0cmluZyBmaWxlTmFtZSA9IGZpbmFsaXplZFVubG9ja2FibGVG
aWxlTmFtZSgpOwoJRGlyQWNjZXNzUmVmIGRhID0gRGlyQWNjZXNzOjpjcmVhdGVf
Zm9yX3BhdGgoZmlsZU5hbWUpOwoJaWYgKGRhKSB7CgkJZGEtPm1ha2VfZGlyX3Jl
Y3Vyc2l2ZShmaWxlTmFtZS5nZXRfYmFzZV9kaXIoKSk7CgoJCUZpbGVBY2Nlc3NS
ZWYgZmlsZSA9IEZpbGVBY2Nlc3M6Om9wZW4oZmlsZU5hbWUsIEZpbGVBY2Nlc3M6
OldSSVRFKTsKCQlpZiAoIWZpbGUpIHsKCQkJV0FSTl9QUklOVCgiRmFpbGVkIHRv
IG9wZW4gZmlsZSB0byBzdG9yZSBmaW5hbGl6YXRpb24gaW5mby4iKTsKCQkJcmV0
dXJuOwoJCX0KCQlmb3IgKGNvbnN0IGF1dG8gKkUgPSBtX2ZpbmFsaXplZFVubG9j
a2FibGVQcm9kdWN0cy5mcm9udCgpOyBFOyBFID0gRS0+bmV4dCgpKSB7CgkJCWZp
bGUtPnN0b3JlX2xpbmUoRS0+Z2V0KCkpOwoJCX0KCX0gZWxzZSB7CgkJV0FSTl9Q
UklOVCgiQ2Fubm90IGFjY2VzcyBsb2NhdGlvbiB0byBzdG9yZSBmaW5hbGl6YXRp
b24gaW5mby4iKTsKCX0KfQoKYm9vbCBHQW5kcm9pZEluQXBwUHVyY2hhc2VCYWNr
ZW5kOjp0cmFuc2FjdGlvbkZpbmFsaXplZEZvclByb2R1Y3QoUmVmPEdJbkFwcFBy
b2R1Y3Q+IHByb2R1Y3QpIHsKCUVSUl9GQUlMX0NPTkRfVighbV9pbmZvRm9yUHVy
Y2hhc2UuaGFzKHByb2R1Y3QtPmdldF9pZGVudGlmaWVyKCkpLCBmYWxzZSk7Cgly
ZXR1cm4gcHJvZHVjdC0+Z2V0X3Byb2R1Y3RfdHlwZSgpICE9IEdJbkFwcFByb2R1
Y3Q6OkNvbnN1bWFibGUgJiYgbV9maW5hbGl6ZWRVbmxvY2thYmxlUHJvZHVjdHMu
aGFzKHByb2R1Y3QtPmdldF9pZGVudGlmaWVyKCkpOwp9Cgp2b2lkIEdBbmRyb2lk
SW5BcHBQdXJjaGFzZUJhY2tlbmQ6OmNoZWNrRmluYWxpemF0aW9uU3RhdHVzKFJl
ZjxHSW5BcHBQcm9kdWN0PiBwcm9kdWN0LCBHSW5BcHBUcmFuc2FjdGlvbjo6VHJh
bnNhY3Rpb25TdGF0dXMgc3RhdHVzKSB7CgkvLyBWZXJpZmllcyB0aGUgZmluYWxp
emF0aW9uIHN0YXR1cyBvZiBhbiBpdGVtIGJhc2VkIG9uIHRoZSBmb2xsb3dpbmcg
bG9naWM6CgkvLyAxLiBJZiB0aGUgaXRlbSBpcyBub3QgcHVyY2hhc2VkIHlldCwg
ZG8gbm90aGluZyAoaXQncyBlaXRoZXIgbmV2ZXIgYmVlbiBwdXJjaGFzZWQsIG9y
IGl0J3MgYQoJLy8gICAgY29uc3VtZWQgY29uc3VtYWJsZS4KCS8vIDIuIElmIHRo
ZSBpdGVtIGlzIHB1cmNoYXNlZCwgYW5kIGl0J3MgYSBjb25zdW1hYmxlLCBpdCdz
IHVuZmluYWxpemVkLiBFbWl0IGEgbmV3IHRyYW5zYWN0aW9uLgoJLy8gICAgQ29u
c3VtYWJsZSBpdGVtcyBhcmUgY29uc3VtZWQgd2hlbiB0aGV5IGFyZSBmaW5hbGl6
ZWQuCgkvLyAzLiBJZiB0aGUgaXRlbSBpcyBwdXJjaGFzZWQsIGFuZCBpdCdzIGFu
IHVubG9ja2FibGUsIGNoZWNrIHRoZSBsb2NhbCBjYWNoZSBmb3IgZmluYWxpemVk
CgkvLyAgICB1bmxvY2thYmxlIHB1cmNoYXNlcy4gSWYgaXQncyBub3QgdGhlcmUs
IHRoZW4gdGhlIHRyYW5zYWN0aW9uIGlzIHVuZmluYWxpemVkLiBUaGlzIG1lYW5z
CgkvLyAgICB0aGF0IGlmIHRoZSBjYWNoZSBnZXRzIGRlbGV0ZWQgb3IgY29ycnVw
dGVkLCB0aGUgd29yc3QtY2FzZSBzY2VuYXJpbyBpcyB0aGF0IHRoZSB0cmFuc2Fj
dGlvbnMKCS8vICAgIGFyZSByZXB1Ymxpc2hlZC4KCWF1dG8gKml0ID0gbV9pbmZv
Rm9yUHVyY2hhc2UuZmluZChwcm9kdWN0LT5nZXRfaWRlbnRpZmllcigpKTsKCWlm
IChpdCA9PSBudWxscHRyKSB7CgkJVkVSQk9TRSgiUHJvZHVjdCAlcyBub3QgcHVy
Y2hhc2VkIiwgcHJvZHVjdC0+Z2V0X2lkZW50aWZpZXIoKSk7CgkJcmV0dXJuOwoJ
fQoKCWNvbnN0IFB1cmNoYXNlSW5mbyAmaW5mbyA9IGl0LT52YWx1ZSgpOwoJaWYg
KCF0cmFuc2FjdGlvbkZpbmFsaXplZEZvclByb2R1Y3QocHJvZHVjdCkpIHsKCQlW
RVJCT1NFKCJQcm9kdWN0IHVuZmluYWxpemVkOiAlcy4gRW1pdHRpbmcgdHJhbnNh
Y3Rpb24gd2l0aCBzdGF0dXMgJWQuIiwgcHJvZHVjdC0+Z2V0X2lkZW50aWZpZXIo
KSwgc3RhdHVzKTsKCgkJUmVmPEdBbmRyb2lkSW5BcHBUcmFuc2FjdGlvbj4gdHJh
bnNhY3Rpb24gPSBtZW1uZXcoR0FuZHJvaWRJbkFwcFRyYW5zYWN0aW9uKAoJCQkJ
aW5mby5zaWduYXR1cmUsCgkJCQlpbmZvLmRhdGEsCgkJCQlpbmZvLnB1cmNoYXNl
VG9rZW4sCgkJCQlpbmZvLm9yZGVySWQsCgkJCQlzdGF0dXMsCgkJCQlwcm9kdWN0
LAoJCQkJaW5mby50aW1lc3RhbXAsCgkJCQlHSW5BcHBUcmFuc2FjdGlvbjo6Tm9G
YWlsdXJlLAoJCQkJU3RyaW5nKCksCgkJCQl0aGlzKSk7CgkJZW1pdF9zaWduYWwo
InRyYW5zYWN0aW9uUmVhZHkiLCBhcnJheSh0cmFuc2FjdGlvbikpOwoJfQp9Cgp2
b2lkIEdBbmRyb2lkSW5BcHBQdXJjaGFzZUJhY2tlbmQ6OnJlZ2lzdGVyUHJvZHVj
dChjb25zdCBTdHJpbmcgJnByb2R1Y3RJZCwgY29uc3QgU3RyaW5nICZwcmljZSwg
Y29uc3QgU3RyaW5nICZ0aXRsZSwgY29uc3QgU3RyaW5nICZkZXNjcmlwdGlvbikg
ewoJVkVSQk9TRSgiUmVnaXN0ZXJpbmcgcHJvZHVjdCAlcyB3aXRoIHByaWNlICVz
IiwgcHJvZHVjdElkLCBwcmljZSk7CgoJTXV0ZXhMb2NrIGxvY2tlcihtX211dGV4
KTsKCWF1dG8gKml0ID0gbV9wcm9kdWN0VHlwZUZvclBlbmRpbmdJZC5maW5kKHBy
b2R1Y3RJZCk7CglFUlJfRkFJTF9OVUxMKGl0KTsKCglSZWY8R0FuZHJvaWRJbkFw
cFByb2R1Y3Q+IHByb2R1Y3QgPSBtZW1uZXcoR0FuZHJvaWRJbkFwcFByb2R1Y3Qo
CgkJCXRoaXMsCgkJCXByaWNlLAoJCQl0aXRsZSwKCQkJZGVzY3JpcHRpb24sCgkJ
CWl0LT52YWx1ZSgpLAoJCQlpdC0+a2V5KCkpKTsKCWNoZWNrRmluYWxpemF0aW9u
U3RhdHVzKHByb2R1Y3QpOwoKCWVtaXRfc2lnbmFsKCJwcm9kdWN0UXVlcnlEb25l
IiwgYXJyYXkocHJvZHVjdCkpOwoJbV9wcm9kdWN0VHlwZUZvclBlbmRpbmdJZC5l
cmFzZShpdCk7Cn0KCnZvaWQgR0FuZHJvaWRJbkFwcFB1cmNoYXNlQmFja2VuZDo6
cmVnaXN0ZXJQdXJjaGFzZWQoY29uc3QgU3RyaW5nICZpZGVudGlmaWVyLCBjb25z
dCBTdHJpbmcgJnNpZ25hdHVyZSwgY29uc3QgU3RyaW5nICZkYXRhLCBjb25zdCBT
dHJpbmcgJnB1cmNoYXNlVG9rZW4sIGNvbnN0IFN0cmluZyAmb3JkZXJJZCwgdWlu
dDY0X3QgdGltZXN0YW1wKSB7CglWRVJCT1NFKCJSZWdpc3RlcmluZyBwcmV2aW91
c2x5IHB1cmNoYXNlZCBwcm9kdWN0OiAlcyIsIGlkZW50aWZpZXIpOwoKCU11dGV4
TG9jayBsb2NrZXIobV9tdXRleCk7CgltX2luZm9Gb3JQdXJjaGFzZS5pbnNlcnQo
aWRlbnRpZmllciwgeyBzaWduYXR1cmUsIGRhdGEsIHB1cmNoYXNlVG9rZW4sIG9y
ZGVySWQsIHRpbWVzdGFtcCB9KTsKfQoKdm9pZCBHQW5kcm9pZEluQXBwUHVyY2hh
c2VCYWNrZW5kOjpyZWdpc3RlclJlYWR5KCkgewoJTXV0ZXhMb2NrIGxvY2tlciht
X211dGV4KTsKCW1faXNSZWFkeSA9IHRydWU7CgllbWl0X3NpZ25hbCgicmVhZHki
KTsKfQoKdm9pZCBHQW5kcm9pZEluQXBwUHVyY2hhc2VCYWNrZW5kOjpoYW5kbGVB
Y3Rpdml0eVJlc3VsdChpbnQgcmVxdWVzdENvZGUsIGludCByZXN1bHRDb2RlLCBj
b25zdCBqb2JqZWN0ICZkYXRhKSB7CglHSW5BcHBQcm9kdWN0ICpwcm9kdWN0ID0g
bV9hY3RpdmVQdXJjaGFzZVJlcXVlc3RzLmdldChyZXF1ZXN0Q29kZSk7CglpZiAo
cHJvZHVjdCA9PSBudWxscHRyKSB7CgkJV0FSTl9QUklOVCh2Zm9ybWF0KCJObyBw
cm9kdWN0IHJlZ2lzdGVyZWQgZm9yIHJlcXVlc3RDb2RlICVkIiwgcmVxdWVzdENv
ZGUpKTsKCQlyZXR1cm47Cgl9CgoJbV9qYXZhT2JqZWN0LmNhbGxNZXRob2Q8dm9p
ZD4oImhhbmRsZUFjdGl2aXR5UmVzdWx0IiwgIihJSUxhbmRyb2lkL2NvbnRlbnQv
SW50ZW50O0xqYXZhL2xhbmcvU3RyaW5nOylWIiwKCQkJcmVxdWVzdENvZGUsIHJl
c3VsdENvZGUsIGRhdGEsIEphdmFKbmlPYmplY3Q6OmZyb21TdHJpbmcocHJvZHVj
dC0+Z2V0X2lkZW50aWZpZXIoKSkub2JqZWN0PGpzdHJpbmc+KCkpOwp9Cgp2b2lk
IEdBbmRyb2lkSW5BcHBQdXJjaGFzZUJhY2tlbmQ6OnB1cmNoYXNlUHJvZHVjdChH
QW5kcm9pZEluQXBwUHJvZHVjdCAqcHJvZHVjdCkgewoJVkVSQk9TRSgiQXR0ZW1w
dGluZyB0byBwdXJjaGFzZSAlcyIsIHByb2R1Y3QtPmdldF9pZGVudGlmaWVyKCkp
OwoKCU11dGV4TG9jayBsb2NrZXIobV9tdXRleCk7CglpZiAoIW1famF2YU9iamVj
dC5pc1ZhbGlkKCkpIHsKCQlwdXJjaGFzZUZhaWxlZChwcm9kdWN0LCBHSW5BcHBU
cmFuc2FjdGlvbjo6RXJyb3JPY2N1cnJlZCwgIkphdmEgYmFja2VuZCBpcyBub3Qg
aW5pdGlhbGl6ZWQiKTsKCQlyZXR1cm47Cgl9CgoJaW50IHJlcXVlc3RDb2RlID0g
MDsKCXdoaWxlIChtX2FjdGl2ZVB1cmNoYXNlUmVxdWVzdHMuaGFzKHJlcXVlc3RD
b2RlKSkgewoJCXJlcXVlc3RDb2RlKys7CgkJaWYgKHJlcXVlc3RDb2RlID09IDAp
IHsKCQkJV0FSTl9QUklOVCgiTm8gYXZhaWxhYmxlIHJlcXVlc3QgY29kZSBmb3Ig
cHVyY2hhc2UgcmVxdWVzdC4iKTsKCQkJcmV0dXJuOwoJCX0KCX0KCgltX2FjdGl2
ZVB1cmNoYXNlUmVxdWVzdHMuaW5zZXJ0KHJlcXVlc3RDb2RlLCBwcm9kdWN0KTsK
CglKYXZhSm5pT2JqZWN0IGludGVudFNlbmRlciA9IG1famF2YU9iamVjdC5jYWxs
T2JqZWN0TWV0aG9kKAoJCQkiY3JlYXRlQnV5SW50ZW50U2VuZGVyIiwKCQkJIihM
amF2YS9sYW5nL1N0cmluZztJKUxhbmRyb2lkL2NvbnRlbnQvSW50ZW50U2VuZGVy
OyIsCgkJCUphdmFKbmlPYmplY3Q6OmZyb21TdHJpbmcocHJvZHVjdC0+Z2V0X2lk
ZW50aWZpZXIoKSkub2JqZWN0PGpzdHJpbmc+KCksCgkJCXJlcXVlc3RDb2RlKTsK
CglpZiAoIWludGVudFNlbmRlci5pc1ZhbGlkKCkpIHsKCQltX2FjdGl2ZVB1cmNo
YXNlUmVxdWVzdHMuZXJhc2UocmVxdWVzdENvZGUpOwoJCXJldHVybjsKCX0KCglz
dGFydEludGVudFNlbmRlcihpbnRlbnRTZW5kZXIsIHJlcXVlc3RDb2RlLCB0aGlz
KTsKfQoKdm9pZCBHQW5kcm9pZEluQXBwUHVyY2hhc2VCYWNrZW5kOjpwdXJjaGFz
ZUZhaWxlZChpbnQgcmVxdWVzdENvZGUsIGludCBmYWlsdXJlUmVhc29uLCBjb25z
dCBTdHJpbmcgJmVycm9yU3RyaW5nKSB7CglNdXRleExvY2sgbG9ja2VyKG1fbXV0
ZXgpOwoJR0luQXBwUHJvZHVjdCAqcHJvZHVjdCA9IG1fYWN0aXZlUHVyY2hhc2VS
ZXF1ZXN0cy50YWtlKHJlcXVlc3RDb2RlKTsKCWlmIChwcm9kdWN0ID09IDApIHsK
CQlXQVJOX1BSSU5UKHZmb3JtYXQoIk5vIHByb2R1Y3QgcmVnaXN0ZXJlZCBmb3Ig
cmVxdWVzdENvZGUgJWQiLCByZXF1ZXN0Q29kZSkpOwoJCXJldHVybjsKCX0KCglw
dXJjaGFzZUZhaWxlZChwcm9kdWN0LCBmYWlsdXJlUmVhc29uLCBlcnJvclN0cmlu
Zyk7Cn0KCnZvaWQgR0FuZHJvaWRJbkFwcFB1cmNoYXNlQmFja2VuZDo6cHVyY2hh
c2VGYWlsZWQoR0luQXBwUHJvZHVjdCAqcHJvZHVjdCwgaW50IGZhaWx1cmVSZWFz
b24sIGNvbnN0IFN0cmluZyAmZXJyb3JTdHJpbmcpIHsKCVZFUkJPU0UoIlB1cmNo
YXNlIGZhaWxlZCBmb3IgJXMiLCBwcm9kdWN0LT5nZXRfaWRlbnRpZmllcigpKTsK
CglSZWY8R0luQXBwVHJhbnNhY3Rpb24+IHRyYW5zYWN0aW9uID0gbWVtbmV3KEdB
bmRyb2lkSW5BcHBUcmFuc2FjdGlvbigKCQkJU3RyaW5nKCksCgkJCVN0cmluZygp
LAoJCQlTdHJpbmcoKSwKCQkJU3RyaW5nKCksCgkJCUdJbkFwcFRyYW5zYWN0aW9u
OjpQdXJjaGFzZUZhaWxlZCwKCQkJcHJvZHVjdCwKCQkJT1M6OmdldF9zaW5nbGV0
b24oKS0+Z2V0X3VuaXhfdGltZSgpLAoJCQlHSW5BcHBUcmFuc2FjdGlvbjo6RmFp
bHVyZVJlYXNvbihmYWlsdXJlUmVhc29uKSwKCQkJZXJyb3JTdHJpbmcsCgkJCXRo
aXMpKTsKCWVtaXRfc2lnbmFsKCJ0cmFuc2FjdGlvblJlYWR5IiwgYXJyYXkodHJh
bnNhY3Rpb24pKTsKfQoKdm9pZCBHQW5kcm9pZEluQXBwUHVyY2hhc2VCYWNrZW5k
OjpwdXJjaGFzZVN1Y2NlZWRlZCgKCQlpbnQgcmVxdWVzdENvZGUsCgkJY29uc3Qg
U3RyaW5nICZzaWduYXR1cmUsCgkJY29uc3QgU3RyaW5nICZkYXRhLAoJCWNvbnN0
IFN0cmluZyAmcHVyY2hhc2VUb2tlbiwKCQljb25zdCBTdHJpbmcgJm9yZGVySWQs
CgkJdWludDY0X3QgdGltZXN0YW1wKSB7CglNdXRleExvY2sgbG9ja2VyKG1fbXV0
ZXgpOwoJR0luQXBwUHJvZHVjdCAqcHJvZHVjdCA9IG1fYWN0aXZlUHVyY2hhc2VS
ZXF1ZXN0cy50YWtlKHJlcXVlc3RDb2RlKTsKCWlmIChwcm9kdWN0ID09IG51bGxw
dHIpIHsKCQlXQVJOX1BSSU5UKHZmb3JtYXQoIk5vIHByb2R1Y3QgcmVnaXN0ZXJl
ZCBmb3IgcmVxdWVzdENvZGUgJWQiLCByZXF1ZXN0Q29kZSkpOwoJCXJldHVybjsK
CX0KCglWRVJCT1NFKCJQdXJjaGFzZSBzdWNjZWVkZWQgZm9yICVzIiwgcHJvZHVj
dC0+Z2V0X2lkZW50aWZpZXIoKSk7CgoJbV9pbmZvRm9yUHVyY2hhc2UuaW5zZXJ0
KHByb2R1Y3QtPmdldF9pZGVudGlmaWVyKCksIHsgc2lnbmF0dXJlLCBkYXRhLCBw
dXJjaGFzZVRva2VuLCBvcmRlcklkLCB0aW1lc3RhbXAgfSk7CglSZWY8R0luQXBw
VHJhbnNhY3Rpb24+IHRyYW5zYWN0aW9uID0gbWVtbmV3KEdBbmRyb2lkSW5BcHBU
cmFuc2FjdGlvbigKCQkJc2lnbmF0dXJlLAoJCQlkYXRhLAoJCQlwdXJjaGFzZVRv
a2VuLAoJCQlvcmRlcklkLAoJCQlHSW5BcHBUcmFuc2FjdGlvbjo6UHVyY2hhc2VB
cHByb3ZlZCwKCQkJcHJvZHVjdCwKCQkJdGltZXN0YW1wLAoJCQlHSW5BcHBUcmFu
c2FjdGlvbjo6Tm9GYWlsdXJlLAoJCQlTdHJpbmcoKSwKCQkJdGhpcykpOwoJZW1p
dF9zaWduYWwoInRyYW5zYWN0aW9uUmVhZHkiLCBhcnJheSh0cmFuc2FjdGlvbikp
Owp9Cg==
