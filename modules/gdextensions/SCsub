#!/usr/bin/env python
import os

Import("env")
Import("env_modules")

env_module = env_modules.Clone()

sources = Glob("*.cpp")
modules = [
    "gd",
    "gd2c",
    "scene",
    "scenery/tree_2d",
    "scenery/spherical_waves",
    "scenery/water_splash",
    "scenery/vegetation_instance",
    "scenery/starfield",
    "scenery/spider_anim",
    "smooth",
    "debugdraw",
    "statemachine",
    "benet",
    "behaviornode",
]

ignore=[]
if env["platform"] == "3ds":
    ignore += ["scene/heatmap.cpp"]
if env["disable_experimental"] == True:
    ignore += ["gd/input_map_editor.cpp"]

for m in modules:
    sources += Glob("%s/*.cpp" % m, exclude=ignore)
    sources += Glob("%s/*.c" % m, exclude=ignore)

env_module.Append(
    CPPPATH=["#thirdparty/enet/", os.path.dirname(os.path.realpath(os.curdir)) + "/gdnative/include", "."]
)
env_module.Append(CPPFLAGS=["-DGD_GODOT_ENET", "-DGD_NO_UNUSED_FUNCTIONS"])

# Compile as a static library
lib = env_module.Library("gdextensions", sources)
# Add the library as a dependency of the final executable
env.Prepend(LIBS=[lib])
