name: üê® Nintendo 3DS Build
on: [push, pull_request]

# https://stackoverflow.com/questions/57549439/how-do-i-use-docker-with-github-actions

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.2
  SCONS_CACHE_LIMIT: 4096

jobs:
  nds-template:
    runs-on: "ubuntu-20.04"
    container: "devkitpro/devkitarm"
    name: Template (target=release, tools=no)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install -y --allow-unauthenticated wget python3 python3-pip python-is-python3

      # Environment for devkitPro
      - name: Configure devKit
        run: |
          echo "::set-env name=PATH::/opt/devkitpro:${PATH}"
          echo "::set-env name=DEVKITPRO::/opt/devkitpro"
          echo "::set-env name=CTRULIB::${DEVKITPRO}/devkitARM"

      # Configuring devkitPro packages
      - name: Configure devKit packages
        run: |
          sudo dkp-pacman -Ss 3ds-libpng 3ds-libz libctru citra3d picasso

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: nds-template-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # You can test your matrix by printing the current Python version
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=3ds target=release tools=no disable_3ds=yes
