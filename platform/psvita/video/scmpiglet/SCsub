import os, errno, subprocess, shutil

Import("env")

vitasdk = ""
if "VITASDK" in os.environ:
	vitasdk = os.environ["VITASDK"]
else:
	print("WARNING: VITASDK not defined in the environment variables.");

piglet = "platform/psvita/video/scmpiglet/"

def execute(exe):

	try:
		output = subprocess.check_output(exe, shell=True).strip().splitlines()
		for ln in output:
			print("> " + ln)
	except OSError as e:
		if e.errno == errno.ENOENT:
			return False
	return True

def MergeLibs(env, target, source):

	if not target or len(target) > 1:
		print("WARNING: Cannot combine into multiple targets.")
		return None
	targetlib = target[0]
	output = piglet + "_combine"
	print("Rapack multiple archives files into single target: " + targetlib.name)
	if os.path.exists(output):
		shutil.rmtree(output, ignore_errors=True)
	os.makedirs(output)
	for f in source:
		print(" .." + f.name)
		execute("cd '%s' && arm-vita-eabi-ar -x '%s'"%(output, f.abspath))
	execute("cd '%s' && ls *.o > objs.lst && arm-vita-eabi-ar -qc ../%s @objs.lst"%(output, targetlib.name))
	shutil.rmtree(output, ignore_errors=True)

	env.Prepend(LIBS=["../%s"%targetlib.name])

	return None

build_opt = ["-Wl,-q", "-Wall", "-Wno-incompatible-pointer-types", "-Wno-pointer-sign", "-O3", "-nostartfiles", "-nostdlib", "-DVITA", "-D__VITA__"]
link_opt= []

lib_src = [
	"src/pib.c",
	"src/hooks.c",
	"src/patches.c",
	"src/sha1.c",
	"src/shacccgpatch.c",
	"src/sysmodepatch.c",
	"src/essl.c",
]

# library:

env_static = env.Clone()
env_static.Append(CPPPATH=["."])
env_static.Append(CFLAGS=[build_opt])
env_static.Append(LDFLAGS=[link_opt])

sources = lib_src

lib = env_static.Library("pib", sources)
piblibname = "" # final library name
if len and len(lib) > 0:
	piblibname = lib[0].name
else:
	print("WARNING: Cannot get library full name.")

# stubs:

output = "out"

build_piglet_out = [output + "/liblibScePiglet_stub_weak.a", output + "/liblibScePiglet_stub.a"]
build_piglet_in = "piglet_stub/nids.yml"
build_piglet_stub = "vita-libs-gen '{0}' '{1}' && make -C '{1}'".format(piglet + build_piglet_in, piglet + output)
env_static.Command(build_piglet_out, build_piglet_in, build_piglet_stub)

# combine dependencies:

vitasdklib = vitasdk + "/arm-vita-eabi/lib"
combine_libraries = [
	vitasdklib + "/libSceDisplay_stub_weak.a",
	vitasdklib + "/libSceGxm_stub_weak.a",
	vitasdklib + "/libSceThreadmgrForDriver_stub.a",
	vitasdklib + "/libSceLibKernel_stub_weak.a",
	vitasdklib + "/libSceAppMgr_stub_weak.a",
	vitasdklib + "/libSceShaccCg_stub_weak.a",
	output + "/liblibScePiglet_stub_weak.a",
	piblibname,
]

env_static.Command("libscepib.a", combine_libraries, MergeLibs)
